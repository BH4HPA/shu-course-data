name: Interval Crawler Task

on:
  schedule:
    - cron: '35 7,9,11,13,15,17,19,21 * * *'
  workflow_dispatch:

jobs:
  crawl-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Pull the latest data branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git subtree add --prefix=data origin data

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install OpenVPN Client
        run: |
          sudo apt-get update && sudo apt-get -y install openvpn

      - name: Connect to OpenVPN
        run: |
          echo "${{ secrets.SHU_USERNAME }}" > /tmp/ovpn-auth.txt
          echo "${{ secrets.SHU_PASSWORD }}" >> /tmp/ovpn-auth.txt
          sudo openvpn --config ./shu-student.ovpn --auth-user-pass /tmp/ovpn-auth.txt --daemon

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install

      - name: Fetch data
        run: |
          echo "${{ secrets.SHU_PASSWORD }}" | pipenv run python crawler.py -o data -u ${{ secrets.SHU_USERNAME }} --password-stdin

      - name: Push
        run: |
          git add data
          git commit -am "$(TZ=Asia/Shanghai date)"
          git subtree split --prefix data --branch interval-crawler-task-result
          git push --force origin interval-crawler-task-result:interval-crawler-task-result

  create-pull-request:
    needs: crawl-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Close existing pull request
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const options = github.pulls.list.endpoint.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: 'interval-crawler-task-result',
              base: 'data',
              title: 'Update'
            });
            const pulls = await github.paginate(options);
            await pulls.forEach(pull => github.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull.number,
              state: 'closed'
            }));

      - name: Create pull request
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: 'interval-crawler-task-result',
              base: 'data',
              title: 'chore: auto update'
            });
